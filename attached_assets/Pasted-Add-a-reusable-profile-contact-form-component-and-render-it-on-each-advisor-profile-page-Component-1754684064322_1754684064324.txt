Add a reusable profile contact form component and render it on each advisor profile page.

Component

Name: AdvisorContactForm

Type: client component (uses state)

Props:

advisorSlug: string (used for POST URL later; for now it can still submit)

displayName?: string (used in the form heading, e.g., “Contact Alex”)

Fields: Name, Email, Message (all required)

Validation: basic required checks, email format check, message min length (e.g., 10 chars)

Submit button shows states: Idle → Sending… → Sent / Error

Success state: clear the form and show “Sent! They’ll reply directly to your email.”

Error state: “Couldn’t send. Please try again in a minute.”

Add a small trust note under the button:
“Your message goes straight to this advisor. Their email stays private.”

Accessibility: use <label>s tied to inputs, proper aria-live for status messages.

Styling (Tailwind): compact, clean, responsive. Example container: rounded-xl border p-4 md:p-6 bg-white/80

Submit wiring (for now)

Point the fetch to POST /api/contact/${advisorSlug} with JSON { name, email, message }.

If that route doesn’t exist yet, catch the 404 and still show a graceful error message (we’ll wire the API later).

Do not include any advisor email in the client.

Placement

On the advisor profile page component, render:

A small heading above the form: Contact {displayName || "this advisor"}

The form itself: <AdvisorContactForm advisorSlug={slugFromUrl} displayName={displayName} />

Add an anchor id="contact" above the heading so links like #contact scroll down correctly.

Conditional render

Accept a boolean prop isAcceptingInquiries from the page.

If false, render a muted notice instead of the form:
“This advisor isn’t currently accepting new inquiries.” and a button Browse Directory.

UI polish

Labels above inputs, placeholders inside.

Disable the button while sending.

Prevent double submits (ignore clicks while sending).

Add mb-4 spacing between fields, mb-2 for labels.

Do not expose any advisor email in the page. The form only uses advisorSlug; the server will look up the destination later.